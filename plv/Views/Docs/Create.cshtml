@model plv.ViewModels.UploadFileViewModel
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <div class="plog col-md-6">
        @if (Model.LogMessage != null)
        {
            @if (Model.Success == true)
            {
                <p class="text-success">@Model.LogMessage</p>
            }
            else
            {
                <p class="text-danger">@Model.LogMessage</p>
            }
        }

        <form asp-action="Add" enctype="multipart/form-data">
            <div class="form-group row">
                <label asp-for="File" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <div class="custom-file">
                        <input asp-for="File" class="form-control custom-file-input" />
                        <label class="custom-file-label">Choose File...</label>
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.File, "", new { @class = "text-danger" })
            </div>
            <!-- <select class="form-control" data-val="true" data-val-required="Choose section" id="SelectedSectionGuid" name="SelectedSectionGuid"><option value=""></option>-->
            <!--<span class="field-validation-valid text-danger" data-valmsg-for="SelectedSectionGuid" data-valmsg-replace="true"></span>-->
            <div class="form-group">
                <label for="DateReceived">Data otrzymania: </label>
                <input class="form-control" type="date" data-val="true" data-val-required="Choose date" id="DateReceived" name="DateReceived" />
                <span class="field-validation-valid text-danger" data-valmsg-for="DateReceived" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Receiver)
                @Html.TextBoxFor(m => m.Receiver, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Receiver, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Sender)
                @Html.TextBoxFor(m => m.Sender, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Sender, "", new { @class = "text-danger" })
            </div>
            <div class="custom-control custom-switch mb-3">
                <input type="checkbox" class="custom-control-input" id="switch">
                <label class="custom-control-label" for="switch">Wychodzące/Przychodzące</label>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ShortOptionalDescription)
                @Html.TextBoxFor(m => m.ShortOptionalDescription, "", new { @class = "form-control" })
            </div>

            @Html.HiddenFor(m => m.Section)
            @Html.AntiForgeryToken()
            <div><input class="button buttonorg" type="submit" value="Prześlij" /></div>
        </form>
    </div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $("#Sender").prop("disabled", true);
            $('.custom-file-input').on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).next('.custom-file-label').html(fileName);
            })
        });

        $("#switch").click(function () {
            if ($("#switch").prop("checked") == true) {
                $("#Sender").prop("disabled", false);
                $("#Receiver").prop("disabled", true);
            }
            else {
                $("#Sender").prop("disabled", true);
                $("#Receiver").prop("disabled", false);
            }
        });

    </script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
}
